// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using DataLayer.Entities;
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace DataLayer.Entities
{
    public partial class SMContext
    {
        private ISMContextProcedures _procedures;

        public virtual ISMContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new SMContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public ISMContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class SMContextProcedures : ISMContextProcedures
    {
        private readonly SMContext _context;

        public SMContextProcedures(SMContext context)
        {
            _context = context;
        }

        public virtual async Task<int> GetInvoiceSumsBySpaceAndYearAsync(Guid? spaceId, int? year, OutputParameter<decimal?> paidSum, OutputParameter<decimal?> unpaidSum, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterpaidSum = new SqlParameter
            {
                ParameterName = "paidSum",
                Precision = 18,
                Scale = 2,
                Direction = System.Data.ParameterDirection.InputOutput,
                Value = paidSum?._value ?? Convert.DBNull,
                SqlDbType = System.Data.SqlDbType.Decimal,
            };
            var parameterunpaidSum = new SqlParameter
            {
                ParameterName = "unpaidSum",
                Precision = 18,
                Scale = 2,
                Direction = System.Data.ParameterDirection.InputOutput,
                Value = unpaidSum?._value ?? Convert.DBNull,
                SqlDbType = System.Data.SqlDbType.Decimal,
            };
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "spaceId",
                    Value = spaceId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.UniqueIdentifier,
                },
                new SqlParameter
                {
                    ParameterName = "year",
                    Value = year ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterpaidSum,
                parameterunpaidSum,
                parameterreturnValue,
            };
            var _ = await _context.Database.ExecuteSqlRawAsync("EXEC @returnValue = [dbo].[GetInvoiceSumsBySpaceAndYear] @spaceId = @spaceId, @year = @year, @paidSum = @paidSum OUTPUT, @unpaidSum = @unpaidSum OUTPUT", sqlParameters, cancellationToken);

            paidSum?.SetValue(parameterpaidSum.Value);
            unpaidSum?.SetValue(parameterunpaidSum.Value);
            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
